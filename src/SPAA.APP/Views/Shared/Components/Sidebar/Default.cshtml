@model SPAA.Business.Models.Aluno

<!-- Sidebar -->
<aside class="sidebar">
    <div class="user-dropdown">
        <button class="user-button">
            @Model.NomeAluno
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="caret-down-icon" viewBox="0 0 16 16">
                <path d="M3.5 14.5L8 9.5l4.5 5z" />
            </svg>
        </button>

        <div class="dropdown-menu">
            <ul>
                <li>
                    <a href="#" id="btnOpenConfigModal" class="dropdown-item"> Configurações</a>
                </li>
                <li><a href="#" data-bs-toggle="modal" data-bs-target="#aboutModal" data-bs-padding-right="0">Sobre Nós</a></li>
                <li>
                    <form asp-controller="Account" asp-action="Logout" method="post">
                        <button type="submit" style="background: none; border: none; text-align: right; width: 100%; color: white;">
                            Sair
                        </button>
                    </form>
                </li>
            </ul>
        </div>

    </div>
    <section class="progress-section">
        <div class="progress-circle">
            <svg viewBox="0 0 100 100" width="100" height="100">
                <!-- Camada do traço branco (fundo) -->
                <circle class="progress-track"
                        cx="50" cy="50" r="45"
                        fill="none"
                        stroke="#fff"
                        stroke-width="5.8"
                        stroke-dasharray="282.74"
                        stroke-dashoffset="0" />

                <!-- Camada do progresso azul -->
                <circle class="progress-bar"
                        cx="50" cy="50" r="45"
                        fill="none"
                        stroke="rgba(74, 144, 226)"
                        stroke-width="6"
                        stroke-dasharray="282.74"
                        stroke-dashoffset="228.2" />

                <!-- Centro escuro -->
                <circle class="progress-center"
                        cx="50" cy="50" r="33 "
                        fill="rgba(74, 144, 226, 0.4)" />
                <defs>
                    <filter id="shadow">
                        <feDropShadow stdDeviation="3"
                                      dx="0" dy="0"
                                      flood-color="rgba(0,0,0,0.3)" />
                    </filter>
                </defs>
            </svg>
        </div>
        <div class="momento">
            <h3>PROGRESSO</h3>
            <h3>ACADÊMICO</h3>
            <p>28%</p>
        </div>
        <button class="view-flowchart-button"> <img src="~/assets/clock.svg" alt="Ícone de Relógio" style="margin-right: 1rem;" />Visualizar Fluxograma</button>
    </section>
    <section class="notifications-section">
        <h3>Notificações</h3>
        <div class="notification-card">
            <p>Prazo de Matrícula Extraordinária se encerra em 3 dias</p>
            <button class="close-notification">&times;</button>
        </div>
        <div class="notification-card">
            <p>Horário de disciplinas atualizado</p>
            <button class="close-notification">&times;</button>
        </div>
    </section>
    <section class="hours-remaining-section">
        <h3>Horas faltantes:</h3>
        <p>Obrigatória: @Model.HorasObrigatoriasPendentes horas</p>
        <p>Optativa: @Model.HorasOptativasPendentes horas</p>
    </section>
</aside>

<div id="modalContainer"></div>

<script>
        document.querySelector('.user-button').addEventListener('click', function () {
        const dropdown = document.querySelector('.dropdown-menu');
        const button = this;

        // Toggle exibição do dropdown
        const isVisible = dropdown.style.display === 'flex';
        dropdown.style.display = isVisible ? 'none' : 'flex';

        // Adiciona/remove a classe active no botão
        button.classList.toggle('active', !isVisible);
    });

    // Fecha o dropdown ao clicar fora e remove a classe active
    window.addEventListener('click', function (event) {
        const dropdown = document.querySelector('.dropdown-menu');
        const button = document.querySelector('.user-button');

        if (!event.target.closest('.user-dropdown')) {
            dropdown.style.display = 'none';
            button.classList.remove('active');
        }
    });

        function openAboutModal() {
        var aboutModal = new bootstrap.Modal(document.getElementById('aboutModal'));
        aboutModal.show();
    }


    document.getElementById('btnOpenConfigModal').addEventListener('click', function (e) {
        e.preventDefault();
        fetch('/Configuration/Configurations')
            .then(response => response.text())
            .then(html => {
                document.getElementById('modalContainer').innerHTML = html;
                const modalEl = document.getElementById('configuracoesModal');
                const modal = new bootstrap.Modal(modalEl);
                modal.show();
            });
    });

</script>

